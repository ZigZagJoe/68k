    movem.l %d0-%d7/%a2-%a6, -(%sp)   | 16 + 13 * 16

	movem.l (%a0)+, %d0-%d7/%a2-%a6   | 24 + 13 * 16
    movem.l %d0-%d7/%a2-%a6, (%a1)    | 16 + 13 * 16
    
	movem.l (%a0)+, %d0-%d7/%a2-%a6   | 24 + 13 * 16
    movem.l %d0-%d7/%a2-%a6, (%a1)    | 16 + 13 * 16
    
	movem.l (%a0)+, %d0-%d7/%a2-%a6   | 24 + 13 * 16
    movem.l %d0-%d7/%a2-%a6, (%a1)    | 16 + 13 * 16
    
	movem.l (%a0)+, %d1-%d7/%a2-%a6   | 24 + 12 * 16
    movem.l %d1-%d7/%a2-%a6, (%a1)    | 16 + 12 * 16
    
	movem.l (%a0)+, %d1-%d7/%a2-%a6   | 24 + 12 * 16
    movem.l %d1-%d7/%a2-%a6, (%a1)    | 16 + 12 * 16

    movem.l (%sp)+, %d1-%d7/%a2-%a6   | 24 + 13 * 16
    
    | 2672 cycles for 252 bytes
    
     moveq #62, %d0        | 8 cycles
    
rem_loop:
    move.l (%a0)+, (%a1)    | 40 * 63
    dbra %d0, rem_loop      | 18 * 62 + 26
    
    | 3670 cycles for 252 bytes
    
    
bc_loop:
    move.l (%a0)+, (%a1)
    btst.b #2, (%a2)
    dbeq %d0, bc_loop        | exit loop if GPDR bit 2 is 0
    
